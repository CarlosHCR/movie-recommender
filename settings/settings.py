"""
Django settings for settings project.
Generated by 'django-admin startproject' using Django 5.0.6.
"""

from pathlib import Path
import dotenv
import os
import dj_database_url


###
# Build paths inside the project like this: BASE_DIR / 'subdir'.
###
BASE_DIR = Path(__file__).resolve().parent.parent

dotenv.read_dotenv(os.path.join(BASE_DIR, ".env"))

ENVIRONMENT = os.environ.get('ENVIRONMENT')

LOAD_ENVS_FROM_FILE = os.environ.get("LOAD_ENVS_FROM_FILE", "False") == "True"


###
# Security Key CHECK FOR PRODUCTION
###
SECRET_KEY = os.environ.get("SECRET_KEY")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


###
# Allowed Hosts CHECK FOR PRODUCTION
###
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
]


###
# Application definition
###
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Rest Framework
    'rest_framework',

    # Apps
    'app.movie',

    # Helpers
    "helpers.timestamp",

    # Swagger
    'drf_yasg',
]


###
# Middleware
###
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


###
# Root URL
###
ROOT_URLCONF = 'settings.urls'


###
# Templates
###
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'settings.wsgi.application'


###
# Database
###
DATABASE_URL = os.environ.get('DATABASE_URL')
DATABASES = {'default': dj_database_url.parse(DATABASE_URL)}
DATABASES['default']['ATOMIC_REQUESTS'] = True


###
# Password validation
###
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


###
# Internationalization
###
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


###
# Static Files
###
STATIC_URL = 'static/'


###
# PK Auto Field
###
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


###
# Rest Framework
###
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny"
    ],
}


###
# OpenAPI
###
GOOGLE_API_KEY = os.environ.get("GOOGLE_API_KEY")
